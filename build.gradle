plugins {
    id 'org.springframework.boot' version '3.2.0'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'java'
    id 'project-report'
    id "com.github.ben-manes.versions" version "0.50.0"
}

group = 'com.github.lhotari'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

sourceSets {
    intTest {
        compileClasspath += sourceSets.main.output
        runtimeClasspath += sourceSets.main.output
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-log4j2'
    implementation 'com.github.lhotari:reactive-pulsar-spring-boot-starter:0.2.1'
    testImplementation 'com.github.lhotari:reactive-pulsar-spring-test-support:0.2.1'
    implementation 'org.apache.pulsar:pulsar-client:3.0.2'
    implementation 'org.apache.pulsar:pulsar-client-admin:3.0.2'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'
    intTestAnnotationProcessor 'org.projectlombok:lombok'
    intTestCompileOnly 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.projectreactor:reactor-test'
    testImplementation 'org.springframework.cloud:spring-cloud-contract-wiremock:4.1.0'
    testImplementation 'org.awaitility:awaitility'
}

configurations {
    all {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
    }
}


configurations {
    all {
        resolutionStrategy.dependencySubstitution {
            substitute module('org.apache.pulsar:pulsar-client') using module('org.apache.pulsar:pulsar-client-original:3.0.2')
            substitute module('org.apache.pulsar:pulsar-client-admin') using module('org.apache.pulsar:pulsar-client-admin-original:3.0.2')
        }
    }
}

test {
    useJUnitPlatform()
}

configurations {
    intTestImplementation.extendsFrom testImplementation
    intTestRuntimeOnly.extendsFrom testRuntimeOnly
}

tasks.register('integrationTest', Test) {
    description = 'Runs integration tests.'
    group = 'verification'

    testClassesDirs = sourceSets.intTest.output.classesDirs
    classpath = sourceSets.intTest.runtimeClasspath
    shouldRunAfter test
    useJUnitPlatform()
    environment('PULSAR_CONTAINER_IMAGE', 'apachepulsar/pulsar:3.0.2')
}

check.dependsOn integrationTest

